name: exportVariableSetToJson
on:
  # push:
  #   branches: 
  #     - main
  workflow_dispatch:
    inputs: 
      VariableSetName: 
        type: string
        required: true
        description: 'Octopus VariableSet Name'
      octopus_url:
        type: string
        #default: ""
jobs:
  exportVariableSetToJson:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run PowerShell script
      shell: pwsh
      env:
        OCTOPUS_SERVER_URL: ${{ github.event.inputs.octopus_url }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        #ProjectName: FirstProject
        #SpaceName: Default
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        outputVariableName: exportedVariables.json
        variableSetName: ${{ github.event.inputs.VariableSetName }}
        #exportedVariablesSet: exportedVariableSet-3
      run: |
        # This is where you put your PowerShell script content
        # For example, you can run a specific PowerShell script file:
        #./exportProjectVariable_Pattern1.ps1
        ./exportVariableSetToJson.ps1
    - name: Check for changes
      id: check_changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "there are new changes";
          git config --global user.name 'Github Action'
          git config --global user.email 'puru7791@users.noreply.github.com'
          #git remote set-url origin https://github.com/${GITHUB_REPOSITORY}.git
          git remote set-url origin https://${{ secrets.REPO_TOKEN }}@github.com/${GITHUB_REPOSITORY}.GIT
          #git checkout "${GITHUB_REF:11}"
          git checkout -b "GH-Auto"
          git add -A
          git commit -m "Auto-generated: Added extracted Octopus variables file"
          #git push origin "${GITHUB_REF:11}"
          git push origin GH-Auto
        else
          echo "Your branch is up to date with '${GITHUB_REF:11}'.";
        fi

    #  - name: Commit report
    #    if: steps.check_changes.outcome ! = 'success'
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    run: |
    #     git config --global user.name 'Github Action'
    #     git config --global user.email 'puru7791@users.noreply.github.com'
    #     git remote set-url origin https://github.com/${GITHUB_REPOSITORY}.git
    #     #git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    #     git checkout "${GITHUB_REF:11}"
    #     git add -A
    #     git commit -m "Auto-generated: Added extracted Octopus variables file"
    #     git push origin "${GITHUB_REF:11}"
    ## - name: Import variable to the Project
    #   shell: pwsh
    #   env: 
    #     destProjectName: Demo1
    #     OCTOPUS_SERVER_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
    #     OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
    #     SpaceName: Default
    #     variableSetFilePath: exportedVariableSet-1.json
    #   run: |
    #     ./ImportVariablesFromFile.ps1
    # - name: Import variables to variableset
    #   shell: pwsh
    #   env: 
    #     OCTOPUS_SERVER_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
    #     OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
    #     SpaceName: Default
    #     variableSetjsonFilePath: exportedVariableSet-1.json
    #     libraryVariableSetName: AppSettings
    #   run: | 
    ##    ./importLibraryvariableSet_pattern2.ps1

    - name: Clear Workspace
      if: always()
      run: |
        ls -la ./
        rm -rf $GITHUB_WORKSPACE/*
